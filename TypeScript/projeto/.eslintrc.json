{
    "env": {
        "es2021": true,
        "node": true
    },
    "extends": [
        "standard",
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:prettier/recommended"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaVersion": "latest",
        "sourceType": "module"
    },
    "plugins": [ // Lembrar de informar o plugins utilizados
        "@typescript-eslint",
        "prettier",
        "eslint-plugin-import-helpers"
    ],
    "rules": {
        "indent": ["error", 4], // quatro espaços
        "prettier/prettier": "error", // ver erros do prettier como: warn(aviso) ou error
        "no-useless-constructor": "off", // Desliga métodos construtores não utilizados
        "@typescript-eslint/no-unused-vars": "off", // Desliga variaveis não utilizadas
        "import-helpers/order-imports": [ // Define como será a ordem dos grupos das importações
            "warn",
            {
                "newlinesBetween": "always", // Pular uma linha para separar os grupos das importações
                "groups": [
                    "/^node:*/",
                    "module",
                    [
                        "parent",
                        "sibling",
                        "index"
                    ]
                ],
                "alphabetize": {
                    "order": "asc",
                    "ignoreCase": true
                }
            }
        ]
    }
}
/* 
    Configuração e comandos:
        -Eslint
        npm i -D eslint
        npx i eslint --init
        npm i -D eslint-config-standard
        "extends":"standard"
        npm i -D eslint-plugin-import-helpers // Ajuda na organização dos imports
        
        -Prettier
        npm i -D prettier eslint-config-prettier eslint-plugin-prettier
        "extends":"plugin:prettier/recommended"

        "printWidhth": 80, // Limite de caracteres por linha
        "tabWidth": 4, // Espaço do tab
        "singleQuote": true, // Ampas simples
        "trailingComma": "none", // Virgula no final da linha de estrutaras que se encaixem (uma lista de array por exemplo)
        "arrowParens": "always", // Colocar o parenteses em arrow functions
        "semi": false, // Ponto e virgula no final de cada comando 
*/